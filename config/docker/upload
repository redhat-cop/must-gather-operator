#!/bin/sh -e

# this shell is responsible for compressing the must gather files and uploading to the case management system
# it can count on the following variables to be set
# username: the user name for redhat case management system
# password: the password for redhat case management system
# caseid: the case id to upload to
# must_gather_output: the directory in which the must gather agents have collected the information
# must_gather_upload: a workspace directory that can be used as stage to zip and upload the must gather compressed file

set -o errexit

must_gather_output=${must_gather_output:="/must-gather-output"}
must_gather_upload=${must_gather_upload:="/must-gather-upload"}
FILENAME_PREFIX=${FILENAME_PREFIX:="must-gather"}
CASE_COMMENT=${CASE_COMMENT:="File upload from must-gather tool"}
CURRENT_TIMESTAMP=$(date --utc +%Y%m%d_%H%M%SZ)
PRIVATE_ATTACHMENT_FLAG=""
PARTSIZE=${PARTSIZE:-1000000000} # in bytes to avoid conversion issues
CSP_FILENAME=${FILENAME_PREFIX}-${CURRENT_TIMESTAMP}.tar.gz
CSP_FILE="${must_gather_upload}/${CSP_FILENAME}"

if [ -z "${caseid}" ] || [ -z "${username}" ] || [ -z "${password}" ];
then
  echo "Error: Required Parameters have not been provided. Exiting..."
  exit 1
fi

if [ -z "${attachment_private}" ] && [  "${attachment_private}" == "true" ];
then
  PRIVATE_ATTACHMENT_FLAG="?private=true"
fi

tar cvaf "$must_gather_upload/${CSP_FILENAME}" $must_gather_output/

SIZE=$(stat --printf="%s" ${CSP_FILENAME})
if [ "${SIZE}" -gt "${PARTSIZE}" ] ; then
    echo "Splitting must-gather on size"
    split -b ${PARTSIZE} ${CSP_FILENAME} ${CSP_FILENAME}- -d 
    UPLOADS=$(ls ${CSP_FILENAME}-*)
else
    UPLOADS=${CSP_FILENAME}
fi 

for FILEPART in ${UPLOADS} ; do 
    echo "Uploading '${FILEPART}' to Red Hat Customer Portal case ${caseid}"

    status_code=$(curl --write-out %{http_code} -o $must_gather_upload/curl.log -u ${username}:${password} -X POST -F "file=@${FILEPART}" "https://api.access.redhat.com/rs/cases/${caseid}/attachments${PRIVATE_ATTACHMENT_FLAG}" -H 'Accept: text/plain' --form-string "description=${CASE_COMMENT}")
    cat $must_gather_upload/curl.log
    if [[ "$status_code" -ne 201 ]];
    then
      echo "Error: Upload to Red Hat Customer Portal did not return expected status code. Expected: 201. Actual: $status_code"
      exit 1
    fi

    echo "Successfully added '${FILEPART}' to Red Hat Customer Portal case ${caseid}"
done
